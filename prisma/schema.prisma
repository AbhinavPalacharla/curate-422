/// AUTHORS: AP, VD
/// LAST EDITED: 6-3-2024
/// DESCRIPTION: schema.prisma: Describes all of the datastructures stored in the database, with their components.

datasource db {
    // provider = "postgresql"
    // url      = env("DATABASE_URL")
    provider = "sqlite"
    url      = "file:./database.db"
}

generator client {
    provider = "prisma-client-js"
}

model Collection {
    id   Int     @id @default(autoincrement())
    name String
    icon String?

    artifacts Artifact[]
}

model Artifact {
    id          Int             @id @default(autoincrement())
    media       ArtifactMedia[]
    description String?

    collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)
    collectionId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ArtifactMedia {
    id       Int    @id @default(autoincrement())
    imageURL String
    type     Int

    artifact   Artifact @relation(fields: [artifactId], references: [id], onDelete: Cascade)
    artifactId Int
}

// model Post {
//     id           String      @id @default(cuid())
//     images       String[]
//     media        Media[]
//     description  String?
//     source       String?
//     socialUser   SocialUser? @relation(fields: [socialUserId], references: [id])
//     socialUserId String?
//     collection   Collection  @relation(fields: [collectionId], references: [id], onDelete: Cascade)
//     collectionId String
//     user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
//     userId       String

//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
// }

// model Media {
//     id      String    @id @default(cuid())
//     url     String    @unique
//     post    Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
//     postId  String
//     type    MediaType
//     caption String?
// }

// enum MediaType {
//     IMAGE
//     VIDEO
// }

// model SocialUser {
//     id       String   @id @default(cuid())
//     username String
//     uid      String   @unique
//     posts    Post[]
//     platform Platform
// }

// enum Platform {
//     TWITTER
//     LAYERS
//     UNSPLASH
// }
